services:
  db:
    image: postgres:16-alpine
    container_name: ${PROJECT_NAME:-myproject}_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    networks:
      - django_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-myproject}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME:-myproject}_web
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/workspace:cached
    working_dir: /workspace
    ports:
      - "${WEB_PORT:-8000}:8000"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/workspace
      - RUFF_CACHE_DIR=/home/app/.cache/ruff
    networks:
      - django_network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  django_network:
    driver: bridge
